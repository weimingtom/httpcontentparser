#pragma once

#include <deque>
#include <string>
#include <httpcontentcheck.h>
#include <ws2spi.h>
#include <io.h>
#include <utility\replacepacket.h>
#include <utility\HTTPPacket.h>
#include <utility\fd_set_utility.h>
#include ".\bufferresult.h"

class HTTPPacket;

// 此类负责把正好的包， 进行内存检测，并保存结果
class HandleQueue {
public:
	HandleQueue(void);
	~HandleQueue(void);

	// 初始化
	// 此函数会创建一个线程
	void initialize();
	void finialize();

	// 增加一个包
	void addPacket(HTTPPacket * packet);

	// 获取结果
	bool getResult(HTTPPacket * packet, int * result);
	void removeCompletePacket(HTTPPacket * packet);
private:
	HTTPPacket* removeFront();
	int dequeSize();

	std::deque<HTTPPacket *> handle_deque_; // 处理队列
	// 临界区
	yanglei_utility::CAutoCreateCS cs_;

	// 处理数据
	void handlePacket(HTTPPacket *);

	BufferResult result_;		// 保存结果
	HTTPContentHander handler_;	// 出来包

	friend DWORD CALLBACK HandlePacket(LPVOID lParam);
};
