// FilterSetting.idl : FilterSetting 的 IDL 源
//

// 此文件将由 MIDL 工具处理以
// 产生类型库(FilterSetting.tlb)和封送处理代码。

import "oaidl.idl";
import "ocidl.idl";

[
	object,
	uuid(FB959601-AD50-4C1C-B21D-3B33B65B1928),
	dual,
	nonextensible,
	helpstring("IGlobalChecker 接口"),
	pointer_default(unique)
]
interface IGlobalChecker : IDispatch {
	[id(1), helpstring("method addBlackDNS")] HRESULT addBlackDNS([in] BSTR dns);
	[id(2), helpstring("method addWhiteDNS")] HRESULT addWhiteDNS([in] BSTR dns);
	[id(3), helpstring("method enableDNSCheck")] HRESULT enableDNSCheck([in] VARIANT_BOOL enable);
	[id(4), helpstring("method removeBlackDNS")] HRESULT removeBlackDNS([in] BSTR blackDNS);
	[id(5), helpstring("method removeWhiteDNS")] HRESULT removeWhiteDNS([in] BSTR whiteDNS);
	[id(6), helpstring("method showImage")] HRESULT showImage([out,retval] VARIANT_BOOL* showed);
	[id(8), helpstring("method checkJEPG")] HRESULT checkImage([in] int type, [out,retval] VARIANT_BOOL* checked);
	[id(10), helpstring("method enablePNFCheck")] HRESULT enableImageCheck([in] int type, [in] VARIANT_BOOL check);
	[id(11), helpstring("method enableShowImage")] HRESULT enableShowImage([in] VARIANT_BOOL show);
	[id(12), helpstring("method checkDNS")] HRESULT checkDNS([in] BSTR dns, [out,retval] VARIANT_BOOL* enabled);
};

[
	uuid(42F932B5-F5CB-4F0D-8925-1B6BE5FECD1B),
	version(1.0),
	helpstring("FilterSetting 1.0 类型库")
]

library FilterSettingLib {
	importlib("stdole2.tlb");
	[
		uuid(C07E6DDF-B837-4C01-9AF3-FCAC1F28D555),
		helpstring("GlobalChecker Class")
	]

	coclass GlobalChecker {
		[default] interface IGlobalChecker;
	};
};
