// RulesHolder.idl : RulesHolder 的 IDL 源
//

// 此文件将由 MIDL 工具处理以
// 产生类型库(RulesHolder.tlb)和封送处理代码。

import "oaidl.idl";
import "ocidl.idl";

[
	object,
	uuid(6ADCEA63-C141-425B-8C89-70AF3672D3BF),
	dual,
	nonextensible,
	helpstring("IRulesChecker interface"),
	pointer_default(unique)
]
interface IRulesChecker : IDispatch{
	[id(1), helpstring("method checkIp")] HRESULT checkIp([in] ULONG ip, [out,retval] VARIANT_BOOL* bFiltered);
};
[
	object,
	uuid(8F30C083-6DFA-4CA3-AD9D-D24EE5580662),
	dual,
	nonextensible,
	helpstring("IRulesSetting 接口"),
	pointer_default(unique)
]
interface IRulesSetting : IDispatch{
	[id(1), helpstring("Method Initialize")] HRESULT initialize(void);
	[id(2), helpstring("Method addFiltederDNS")] HRESULT addFiltederDNS([in] BSTR dns);
	[id(3), helpstring("Method enableIpCheck")] HRESULT enableIpCheck([in] VARIANT_BOOL enable);
	[id(4), helpstring("Method removeFilteredDNS")] HRESULT removeFilteredDNS(BSTR dns);
};
[
	uuid(8E167E68-FAEF-48D3-87EE-44CDAC7408AF),
	version(1.0),
	helpstring("RulesHolder 1.0 typelibrary")
]
library RulesHolderLib
{
	importlib("stdole2.tlb");
	[
		uuid(C7425D4F-F6D3-4F9C-A0BB-3297325A45A4),
		helpstring("RulesChecker Class")
	]
	coclass RulesChecker
	{
		[default] interface IRulesChecker;
	};
	[
		uuid(A31778F3-3300-4327-B4C4-8B24B55504E3),
		helpstring("RulesSetting Class")
	]
	coclass RulesSetting
	{
		[default] interface IRulesSetting;
	};
};
