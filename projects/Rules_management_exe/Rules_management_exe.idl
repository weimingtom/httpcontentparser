// Rules_management_exe.idl : Rules_management_exe 的 IDL 源
//

// 此文件将由 MIDL 工具处理以
// 产生类型库(Rules_management_exe.tlb)和封送处理代码。

import "oaidl.idl";
import "ocidl.idl";

[
	object,
	uuid(7DA12468-B290-42A0-8F98-3AB211142AA1),
	dual,
	nonextensible,
	helpstring("IExeRulesChecker interface"),
	pointer_default(unique)
]
interface IExeRulesChecker : IDispatch{
	[id(1), helpstring("方法checkIp")] HRESULT checkIp([in] ULONG ip, [out,retval] VARIANT_BOOL* bFiltered);
};
[
	object,
	uuid(BE5426ED-C2D5-4C51-9981-A3AA19383FAB),
	dual,
	nonextensible,
	helpstring("IExeRulesSetting interface"),
	pointer_default(unique)
]
interface IExeRulesSetting : IDispatch{
	[id(1), helpstring("Method Initialize")] HRESULT initialize(void);
	[id(2), helpstring("Method addFiltederDNS")] HRESULT addFiltederDNS([in] BSTR dns);
	[id(3), helpstring("Method enableIpCheck")] HRESULT enableIpCheck([in] VARIANT_BOOL enable);
	[id(4), helpstring("Method removeFilteredDNS")] HRESULT removeFilteredDNS(BSTR dns);

};
[
	uuid(1D97C684-6D93-4F41-B023-AB4A988B4905),
	version(1.0),
	helpstring("Rules_management_exe 1.0 classlibrary")
]
library Rules_management_exeLib
{
	importlib("stdole2.tlb");
	[
		uuid(A7A82CE1-26DB-4B36-B0D7-ECFA04AEB03E),
		helpstring("ExeRulesChecker Class")
	]
	coclass ExeRulesChecker
	{
		[default] interface IExeRulesChecker;
	};
	[
		uuid(F907B189-7F80-4E95-B3AB-22E077ADB495),
		helpstring("ExeRulesSetting Class")
	]
	coclass ExeRulesSetting
	{
		[default] interface IExeRulesSetting;
	};
};
